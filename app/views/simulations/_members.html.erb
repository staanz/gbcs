<% filter = {};params[:filter].each{|k,v| filter[k] = v } if params[:filter]  %>
<% sp = {}; sp[:sp1] = params[sp:[:sp1]]; sp[:sp2] = params[sp:[:sp2]]; sp[:sp3] = params[sp:[:sp3]] %>
<% so = {}; so[:so1] = params[so:[:so1]]; so[:so2] = params[so:[:so2]]; so[:so3] = params[so:[:so3]] %>
<% @members.each do |u| %>
  <div id="member-<%=u.id%>">
    <div class="long"><%= link_to "#{u.fname} #{u.lname[0]}.", user_stats_simulation_path(u), remote: true %></div>
    <div class="short"><%= u.score.round(2) %></div>
    <div class="short"><%= u.program %></div>
    <div class="short"><%= link_to 'Remove', {controller:'simulations', action:'remove_member', filter: filter,name: params[:name], sp: sp, so: so, :team => @team.id, :remove_member => u.id, :members => @members.pluck(:id)}, id:"remove-#{u.id}", class:'submit-btn', remote: true unless @team.is_member(u) %></div>
  </div>
<% end %>
<%= link_to 'Add All', {controller:'members', action:'mass_add', :team => @team.id, :members => @members.pluck(:id)},class:'submit-btn', id:'mass-add', remote: true if User.where(:id=>@members).where.not(:id=>@team.members.collect{|m|m.user_id}).present? %>